# llm_service.py

import requests
import json
import re
from config import IAM_TOKEN, FOLDER_ID

YANDEX_API_URL = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"

def llm_call_1_yandex(company_data):
    headers = {
        "Authorization": f"Bearer {IAM_TOKEN}",
        "Content-Type": "application/json"
    }

    # üß† –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å 4 –∑–∞–¥–∞—á–∞–º–∏
    system_prompt = (
        "–¢—ã –∞–Ω–∞–ª–∏—Ç–∏–∫ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü. –ù–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–∞–Ω–∏–∏ –≤—ã–ø–æ–ª–Ω–∏:\n"
        "1. Entity Recognition: –≤—ã–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã (–Ω–∞–∑–≤–∞–Ω–∏–µ, –ò–ù–ù, –û–ì–†–ù, –∞–¥—Ä–µ—Å, —É—á—Ä–µ–¥–∏—Ç–µ–ª–∏ –∏ —Ç.–ø.)\n"
        "2. Text Summarization: —Å–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏.\n"
        "3. Risk Pattern Detection: –ø–µ—Ä–µ—á–∏—Å–ª–∏ —Ä–∏—Å–∫–∏ ‚Äî —Å—É–¥—ã, —Å–∞–Ω–∫—Ü–∏–∏, –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏ —Ç.–¥.\n"
        "4. Classification: –æ—Ü–µ–Ω–∏ ‚Äî '–í—Å–µ —è—Å–Ω–æ' –∏–ª–∏ '–ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'.\n\n"
        "–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä–æ–≥–æ –≤ JSON —Å–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π:\n"
        "{\n"
        "  \"Entity Recognition\": {...},\n"
        "  \"Text Summary\": \"...\",\n"
        "  \"Risks\": [...],\n"
        "  \"Classification\": \"–í—Å–µ —è—Å–Ω–æ\" –∏–ª–∏ \"–ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\"\n"
        "}"
    )

    user_prompt = f"–í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏:\n{json.dumps(company_data, ensure_ascii=False, indent=2)}"

    body = {
        "modelUri": f"gpt://{FOLDER_ID}/yandexgpt/latest",
        "completionOptions": {
            "stream": False,
            "temperature": 0.3,
            "maxTokens": 700
        },
        "messages": [
            {"role": "system", "text": system_prompt},
            {"role": "user", "text": user_prompt}
        ]
    }

    try:
        response = requests.post(YANDEX_API_URL, headers=headers, json=body).json()
        if "result" in response:
            text = response["result"]["alternatives"][0]["message"]["text"]

            # –£–±–∏—Ä–∞–µ–º –æ–±—ë—Ä—Ç–∫–∏ –≤–∏–¥–∞ ```json ... ```
            clean_text = re.sub(r"^```(json)?|```$", "", text.strip(), flags=re.MULTILINE).strip()

            try:
                parsed = json.loads(clean_text)
                return {"json": parsed, "text": clean_text}
            except Exception as e:
                return {"error": "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞", "text": text}
        else:
            return {"error": response.get("error", "LLM: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")}
    except Exception as e:
        return {"error": f"LLM: {str(e)}"}
