# handlers.py

import re
from telegram import Update, InputFile
from telegram.ext import CallbackContext
from dadata_service import get_company_from_dadata
from data_newton_service import get_info_from_data_newton
from llm_service import llm_call_1_yandex
from file_storage import save_case

# üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ò–ù–ù/–û–ì–†–ù/–Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def extract_query(text: str):
    inn_match = re.search(r"\b\d{10}\b", text)
    ogrn_match = re.search(r"\b\d{13}\b", text)
    if inn_match:
        return inn_match.group()
    elif ogrn_match:
        return ogrn_match.group()
    return text.strip()

# üü¢ –°—Ç–∞—Ä—Ç
def handle_start(update: Update, context: CallbackContext):
    update.message.reply_text("üëã –û—Ç–ø—Ä–∞–≤—å –ò–ù–ù, –û–ì–†–ù –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")

# ‚öôÔ∏è –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
def handle_message(update: Update, context: CallbackContext):
    raw_text = update.message.text.strip()
    query = extract_query(raw_text)

    update.message.reply_text(f"üîç –ò—â—É –∫–æ–º–ø–∞–Ω–∏—é: {query}...")

    company_data = get_company_from_dadata(query)
    if "error" in company_data:
        update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ DaData.")
        return

    # ‚ûï DataNewton
    dn_data = get_info_from_data_newton(company_data["–ò–ù–ù"])
    if "error" in dn_data:
        update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ DataNewton: {dn_data['error']}")
    else:
        company_data["DataNewton"] = dn_data

        # ‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        negative = dn_data.get("company", {}).get("negative_lists")
        if negative:
            update.message.reply_text("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏")
        else:
            update.message.reply_text("‚úÖ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    # üß† LLM-–∞–Ω–∞–ª–∏–∑
    llm1 = llm_call_1_yandex(company_data)

    # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º
    json_path, txt_path = save_case(query, company_data, llm1)

    # üìé –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text("üìÑ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–∞...")
    with open(txt_path, "rb") as f:
        context.bot.send_document(chat_id=update.effective_chat.id, document=InputFile(f))
    with open(json_path, "rb") as f:
        context.bot.send_document(chat_id=update.effective_chat.id, document=InputFile(f))
